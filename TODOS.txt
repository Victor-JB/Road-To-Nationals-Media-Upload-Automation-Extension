
High:
1. HAVE THE FOLDERS PERSIST, NOT A BAJILLION API CALLS TO DO SO
3. create example usage, so people know how it works
 - specifically for how the naming works, and how managers can either rename the videos or use the builtin forms to rename the videos
  - also explain how the matching works for the autofill
4. donation set up -- can donate
5. CREATE ONBOARDING PAGE THAT IS OPENED UPON INSTALL? Can do donation + demo of how it works
6. state of entering videos in AND THE FOLDERS / VIDEOS THEMSELVES persist and are saved; fewer api calls, user can exit extension and stuff saves
7. VIDEO PREVIEW -- CAN KNOW WHICH ATHLETE DIRECTLY IN THE EXTENSION -- pick a time in the middle of the routine to be able to tell, when hover over it it plays
8. then make dropdown for athlete name and event, super easy
9. read scores off of road to nationals with the name and event selected
10. make it larger

high priority:
1. implement queue for upload clicking; as in, the current upload doesn't get killed if person clicks button for next upload
2. MAKE SURE UPLOAD DOESN'T DIE IF user closes extension, some way of remembering upload progress
2.5 Also incliude a cancel button to cancel upload
3. PARELLEL UPLOADS--upload multiple videos at once for mass upload
4. better progress bar, with blobs so that video progress is tracked
Upload all of these safeguardand performance enhancers before releasing next version to puboic

2. add loading icon for refresh folders


1. drop down of team members who are added, so user doesn't have to reinput video name every time, can just 
put in initial template
2. streamlining process further, reducing number of fields user needs to input, standardize and save preferences
3. donate button "buy coffee" in extension and chrome web store

Later:
- CV to read score values off of score sheet

- better error handling in general--making sure entire extension doesn't die over one error

3. better readme -- use nice template from the other guy
5. possibly ask road2nationals for api collaboration
7. figure out distribution--getting it to more teams if it is useful
8. figure out how it works on mobile--if it looks nice, works well, can be done quickly upon
logging into the site, even from the meet

Critical:
- zip new package and upload to web store for verification
- add a link to the privacy policy in the extension

MAKE A "HOW TO USE" doc for first time users, it redirects you to that site +
have the url in the extension itself; explain how you need to name videos accordingly,
what the extension does automatically, how to upload videos, etc.

Ok, recall earlier you said I could do dynamic uploading with blobs where you integrate the code to track the actual upload progress of the video file, with the blobs you mentioned? how would I implement this with the code now here